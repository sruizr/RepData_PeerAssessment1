demo(graphics)
getwd()
t <- read.csv("/home/sruiz/Desktop/Exploratory/household_power_consumption.txt")
head(t)
str(t)
size(t)
t <- read.csv("/home/sruiz/Desktop/Exploratory/household_power_consumption.txt",sep = ";")
View(t)
ss
s
s
s
s
s
s
str(t)
View(t)
?Devices
x11()
y <- rnorm(10)
x <- rnorm(10)
plot(x,y)
?abline
abline(v=0)
abline(h=0)
?texst
?text
dev.copy(pdf,file = "/home/sruiz/prueba.pdf")
dev.off
dev.off()
setwd("~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts")
?read.table
?colClasses
24*60
d0 <- as.Date("2006-12-16")
d0
d1  <-  as.Date("2007-02-01")
dÂº
d1
d1-d0
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
d <- plot1()
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
d <- plot1()
strptime("14:21:00")
as.POSIXct("14:12:00")
as.POSIXct.Date("14:12:00")
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
as.POSIXct.Date("14:12:00")
d <- plot1()
d
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
d
d <- plot1()
head(d)
tail(d)
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
d <- plot1()
head(d)
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
d <- plot1()
head(d)
head(d)
?strptime
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
d <- plot1()
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
d <- plot1()
data
data
d
d["Date"]
d[,1]
as.date(d[,1])
as.Date(d[,1])
?as.Date
d[,1]
head(d)
asDate(d[,1], format="%d/%m/%Y")
as.Date(d[,1], format="%d/%m/%Y")
asDate(d["Date"], format="%d/%m/%Y")
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
d <- plot1
d
d <- plot1()
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
d <- plot1()
head(d)
d
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
d <- plot1()
d
str(d)
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
d <- plot1()
head(d)
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
d <- plot1()
head(d)
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
d <- plot1()
head(d)
?strptime
d <- plot1()
?strptime
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
d <- plot1()
head(d)
d[d[,1] == "2007-02-01"]
d[,1] == "2007-02-01"
d[d[,1] == "2007-02-01",]
d1 <- d[d[,1] == "2007-02-01",]
head(d1)
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
d  <- plot1()
head(d)
tail(d)
?png
d
hist(d$Global_active_power)
hist(d$Global_active_power, col ="red")
hist(d$Global_active_power, col ="red", xlab = "Global Active Power (kilowatts)")
hist(d$Global_active_power, col ="red", xlab = "Global Active Power (kilowatts)", title = "Global Active Power")
?hist
hist(d$Global_active_power, col ="red", xlab = "Global Active Power (kilowatts)")
title("G")
title("Gadfasdfasdfasd")
hist(d$Global_active_power, col ="red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
plot1()
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
plot1()
plot1()
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
plot1()
plot(d$date,d$Global_active_power)
plot(d$Date,d$Global_active_power)
d$Time
d$Date +d$Time
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot2.R')
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
d <- plot2()
d
head(d)
plot(d$Time,d$Global_active_power)
min(d$Time)
plot(d$Time,d$Global_active_power)
xlim
?plot
d
head(d)
plot(d$Time, d$Global_active_power)
?plot
plot(d$Date, d$Global_active_power)
plot(d$Global_active_power)
plot(d$Time,d$Global_active_power)
plot(d$Time,d$Global_active_power,xlim=as.POSIXct(c("2007-02-01 00:00:00","2007-02-03 00:00:00")))
plot(d$Time,d$Global_active_power,xlim = as.POSIXct(c("2007-02-01 00:00:00","2007-02-03 00:00:00")))
d$Time
class(d$Time)
class(d$Date)
?strptime
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot2.R')
d <- plot2()
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot2.R')
d <- plot2()
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot2.R')
d <- plot2()
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot2.R')
d <- plot2()
plot(d$Time, d$Global_active_power)
class(d$Time)
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot2.R')
class(d$Time)
d <- plot2()
class(d$Time)
?strptime
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot2.R')
d <- plot2()
plot(d$Time,d$Global_active_power)
class(d$Time)
head(d$Time)
d$Time
head(d)
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot2.R')
d <- plot2()
d$Time
as.POSIXct(d$Date)
d$Time
as.POSIXct(d$Date)
?as.POSIXct
?as.POSIXct.Date
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot2.R')
d <- plot2()
d$Time
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot2.R')
d <- plot2()
head(d)
as.POSIXct.date(d[1,2], format="%d/%m/%Y %H:%M:%s")
d[1,2]
as.POSIXct(d[1,2], format="%d/%m/%Y %H:%M:%s")
strptime(d[1,2], format="%d/%m/%Y %H:%M:%s")
?strptime
d[1,2]
d[1,2]
strptime(d[1,2], format="%d/%m/%Y %H:%M:%s")
a <- strptime(d[1,2], format="%d/%m/%Y %H:%M:%s")
class(a)
a
strptime("1/2/2007", format = "%d/%m/%Y")
strptime("1/2/2007 00:00:00", format = "%d/%m/%Y %H:%M:%s")
strptime("1/2/2007 00", format = "%d/%m/%Y %H")
strptime("1/2/2007 01", format = "%d/%m/%Y %H")
strptime("1/2/2007 01:45", format = "%d/%m/%Y %H:%M")
strptime("1/2/2007 01:45", format = "%d/%m/%Y %H:%M:%S")
strptime("1/2/2007 01:45:33", format = "%d/%m/%Y %H:%M:%S")
D
d
strptime(d$Time, format = "%d/%m/%Y %H:%M:%S")
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot2.R')
d <- plot2()
class(d$Time)
d$Time
?as.POSIXct
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot2.R')
d <- plot2()
d$Date
d$Time
plot(d$Time,d$Global_active_power)
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot1.R')
?plot
plot(d$Time,d$Global_active_power, type =n )
plot(d$Time,d$Global_active_power, type = "n" )
lines(d$Time,d$Global_active_power)
plot(d$Time,d$Global_active_power, type = "n", xlab = NULL)
plot(d$Time,d$Global_active_power, type = "n", xlab = "")
plot(d$Time,d$Global_active_power, type = "n", xlab = "", ylab ="Global Active Power (kilowatts)")
lines(d$Time,d$Global_active_power)
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot2.R')
plot2()
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot2.R')
plot2()
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot2.R')
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot3.R')
?legend
plot(d$Time,d$Sub_metering_1,type ="n")
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot3.R')
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot3.R')
plot3()
?legend
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot3.R')
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot3.R')
?legend
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot3.R')
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot3.R')
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot3.R')
plot3()
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot3.R')
plot3()
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot3.R')
plot3()
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot3.R')
plot2()
plot3()
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot3.R')
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot4.R')
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot4.R')
plot4()
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/Scripts/plot4.R')
plot4()
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/plot1.R')
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/plot2.R')
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/plot3.R')
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/plot4.R')
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/plot1.R')
plot1()
plot2()
plot3()
plot4()
source('~/mySpace/Dropbox/Data Science/ExData_Plotting1/plot2.R')
plot2()
library(nlme)
library(lattice)
xyplot(weight~Time | Diet, BodyWeight)
x= rnorm(1:10)
z <- rnorm(1:10)
y  <- rnorm(1:10)
a <- xyplot(z,y)
xyplot(x,y)
library(datasets)
data(airquality)
qplot(Wind,Ozone,data = airquality, facets = .~factor(Month))
library(ggplot2)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
dataset(movies)
movies
g <- gplot(movies, aes(votes, rating))
g <- ggplot(movies, aes(votes, rating))
print(g)
votes
dataset(votes)
votes
str(airquality)
qplot(Wind, Ozone, data = airquality, facets= .~factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
?lines
?panel.lmline
?text
?axis
setwd("~/mySpace/Dropbox/Data Science/RepData_PeerAssessment1")
clear
I'm loading directly tcleahe zip file, for this purpose I
```{r}
data  <- read.csv(unzip("activity.zip", "activity.csv"))
exit()
)))))
))))
```
The field *date* is a factor. I convert this field to the proper type:
```{r}
data$date  <- as.Date(data$date, format = "%Y-%m-%d")
```
I'm adding a new field *hour* geting it from interval:
```{r}
data$hour  <- data$interval /100 + (data$interval %% 100) /60
```
Now, it's good to have a general ideas:
```{r}
summary(data)
```
## What is mean total number of steps taken per day?
We calculate the number of steps per day, with the use of function aggregate:
```{r}
stepsPerDay  <-  aggregate(data$steps, by = list( data$date), FUN = sum)
names(stepsPerDay)  <-  c("date", "steps")
```
And here you have the histogram:
```{r}
hist(stepsPerDay$steps, xlab = "Number of steps per day", main = "Histogram of steps per day")
```
The media of steps per day is `r format(mean(stepsPerDay$steps, na.rm = TRUE))` and the median is `r median(stepsPerDay$steps, na.rm = TRUE)`.
## What is the average daily activity pattern?
I create a new data frame called *stepsPerInterval* where I calculate the mean of steps along all days. Notice that I've removed NAs. Otherwise the mean should not be calculated:
```{r}
stepsPerInterval  <-  aggregate(data$steps, by = list( data$hour), FUN = mean, na.rm = TRUE)
names(stepsPerInterval)  <- c("hour", "steps")
```
Then, I plot the results:
```{r}
plot(stepsPerInterval$hour, stepsPerInterval$steps, type = "l", xlim = c(0, 24), main = "Average of steps by hour", xlab = "Hour", ylab = "Average of # steps")
```
## Imputing missing values
1. We don't have information on `r sum(is.na(data$steps))` records about *steps*.
2. We're creating a new data frame without the NAs. The strategy is filling it with the average for this interval.
```{r}
cleanData <- data
for (i in 1:nrow(cleanData)){
if (is.na(cleanData[i, "steps"])) {
cleanData[i,"steps"]  <- stepsPerInterval[stepsPerInterval$hour == cleanData[i, "hour"], "steps"]
}
}
```
3. I recalculate *stepsPerDay*:
```{r}
stepsPerDay  <-  aggregate(cleanData$steps, by = list( cleanData$date), FUN = sum)
names(stepsPerDay)  <-  c("date", "steps")
```
4. And here you have the new histogram
```{r}
hist(stepsPerDay$steps, xlab = "Number of steps per day", main = "Histogram of steps per day(NAs filled)")
```
The number of values rounding average has increased.
## Are there differences in activity patterns between weekdays and weekends?
For this purpose we're introducing a factor to the new dataframe
```{r}
wday  <- factor(weekdays(cleanData$date, abbreviate = TRUE)=="dom" | weekdays(cleanData$date, abbreviate = TRUE)=="sÃ¡b", levels = c(FALSE, TRUE), labels = c("workingday", "weekend"))
cleanData["weekday"]  <- wday
```
Recalculate activity:
```{r}
stepsPerInterval  <-  aggregate(cleanData$steps, by = list( cleanData$hour, cleanData$weekday), FUN = mean, na.rm = TRUE)
names(stepsPerInterval)  <- c("hour", "weekday", "steps")
```
And ploting results:
```{r}
library(lattice)
xyplot(stepsPerInterval$steps~stepsPerInterval$hour|stepsPerInterval$weekday, xlab="Hour", ylab="Average of steps")
```
